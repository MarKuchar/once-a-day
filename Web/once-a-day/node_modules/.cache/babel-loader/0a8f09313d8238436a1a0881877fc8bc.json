{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/martin.kuchar/Development/Swift/once-a-day/Web/once-a-day/src/pages/Contact.js\";\nimport React from 'react';\nimport Myself from '../components/Myself';\nimport Content from '../components/Content';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from 'axios';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value; // if the input was checkbox then value is checkbox\n\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // prevent refreshing after submiting the form\n\n      this.setState({\n        disabled: true,\n        emailSent: false\n      }); // We pass the whole state, and in backend we choose what we actually need\n\n      Axios.post('http://localhost:3030/api/email', this.state).then(res => {\n        if (res.data.success) {\n          this.setState({\n            disabled: false,\n            emailSent: true\n          });\n        } else {\n          this.setState({\n            disabled: false,\n            emailSent: false\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          disabled: false,\n          emailSent: false\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Myself, {\n        subTitle: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '50vh',\n          backgroundColor: 'white',\n          opacity: 0.8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"k-container-bg\",\n          children: \"If you have any questions or suggestions about my Policy or Terms and Conditions, do not hesitate to contact me at ypin.master@gmail.com.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Contact;","map":{"version":3,"sources":["/Users/martin.kuchar/Development/Swift/once-a-day/Web/once-a-day/src/pages/Contact.js"],"names":["React","Myself","Content","Form","Button","Axios","Contact","Component","constructor","props","handleChange","event","target","value","type","checked","name","setState","handleSubmit","preventDefault","disabled","emailSent","post","state","then","res","data","success","catch","err","email","message","render","title","display","justifyContent","alignItems","height","backgroundColor","opacity"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,YAXmB,GAWHC,KAAD,IAAW;AACtB,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE,CAFsB,CAEoD;;AAC1E,YAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AACA,WAAKC,QAAL,CAAc;AACV,SAACD,IAAD,GAAQH;AADE,OAAd;AAGH,KAlBkB;;AAAA,SAoBnBK,YApBmB,GAoBHP,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACQ,cAAN,GADsB,CACE;;AAExB,WAAKF,QAAL,CAAc;AACVG,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,SAAS,EAAE;AAFD,OAAd,EAHsB,CAStB;;AACAhB,MAAAA,KAAK,CAACiB,IAAN,CAAW,iCAAX,EAA8C,KAAKC,KAAnD,EACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAGA,GAAG,CAACC,IAAJ,CAASC,OAAZ,EAAqB;AACjB,eAAKV,QAAL,CAAc;AACVG,YAAAA,QAAQ,EAAE,KADA;AAEVC,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH,SALD,MAKO;AACH,eAAKJ,QAAL,CAAc;AACVG,YAAAA,QAAQ,EAAE,KADA;AAEVC,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH;AACJ,OAbL,EAaOO,KAbP,CAaaC,GAAG,IAAI;AACZ,aAAKZ,QAAL,CAAc;AACVG,UAAAA,QAAQ,EAAE,KADA;AAEVC,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH,OAlBL;AAmBH,KAjDkB;;AAEf,SAAKE,KAAL,GAAa;AACTP,MAAAA,IAAI,EAAE,EADG;AAETc,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITX,MAAAA,QAAQ,EAAE,KAJD;AAKTC,MAAAA,SAAS,EAAE;AALF,KAAb;AAOH;;AA0CDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWwB;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGQ;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAmBC,UAAAA,cAAc,EAAC,QAAlC;AAA4CC,UAAAA,UAAU,EAAC,QAAvD;AAAiEC,UAAAA,MAAM,EAAE,MAAzE;AAAiFC,UAAAA,eAAe,EAAE,OAAlG;AAA2GC,UAAAA,OAAO,EAAE;AAApH,SAAZ;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhEiC;;AAiErC;AAED,eAAejC,OAAf","sourcesContent":["import React from 'react';\nimport Myself from '../components/Myself';\nimport Content from '../components/Content';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Axios from 'axios';\n\nclass Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            message: '',\n            disabled: false,\n            emailSent: null,\n        }\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value; // if the input was checkbox then value is checkbox\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault(); // prevent refreshing after submiting the form\n\n        this.setState({\n            disabled: true,\n            emailSent: false\n        });\n\n\n        // We pass the whole state, and in backend we choose what we actually need\n        Axios.post('http://localhost:3030/api/email', this.state)\n            .then(res => {\n                if(res.data.success) {\n                    this.setState({\n                        disabled: false,\n                        emailSent: true\n                    });\n                } else {\n                    this.setState({\n                        disabled: false, \n                        emailSent: false\n                    });\n                }\n            }).catch(err => {\n                this.setState({\n                    disabled: false,\n                    emailSent: false\n                });\n            })\n    }\n\n    render() {\n        return(\n            <div>\n                <Myself subTitle={this.props.title} />\n\n                    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '50vh', backgroundColor: 'white', opacity: 0.8 }}>\n                        <p className=\"k-container-bg\">\n                            If you have any questions or suggestions about my Policy or Terms and Conditions, do not hesitate to contact me at ypin.master@gmail.com.\n                        </p>\n                    </div>\n            </div>\n        )\n    }\n};\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}